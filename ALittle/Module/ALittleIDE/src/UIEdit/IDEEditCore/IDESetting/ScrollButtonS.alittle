
namespace ALittleIDE;

public class ScrollButtonS : DisplayLayoutS
{
    private ALittle.DisplayObject _show_up;
    private ALittle.DisplayObject _show_up_grid9;
    private ALittle.DisplayObject _show_over;
    private ALittle.DisplayObject _show_over_grid9;
    private ALittle.DisplayObject _show_down;
    private ALittle.DisplayObject _show_down_grid9;
    private ALittle.DisplayObject _show_disabled;
    private ALittle.DisplayObject _show_disabled_grid9;

    public ctor(IDETreeUserInfo user_info, IDETabChild tab_child, IDETreeLogic tree_logic)
    {
        this._layer_name = "ide_setting_scrollbutton";
    }

    public fun LoadNatureBase()
    {
        DisplayLayoutS.LoadNatureBase(this);
        this.LoadValueData("text");
        this.LoadShowTypeDataForImage("show_up");
        this.LoadShowTypeDataForImage("show_over");
        this.LoadShowTypeDataForImage("show_down");
        this.LoadShowTypeDataForImage("show_disabled");
    }

    public fun HandleMTextFOCUSOUT(ALittle.UIEvent event)
    {
        this.DefaultNoStringInputChange("text", false);
    }

    public fun HandleShowUpFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_up", this._show_up.text, this._show_up_grid9.selected, false);
    }
    public fun HandleShowUpSelect(ALittle.UIEvent event)
    {
        var func = bind(this.ImagePathSelectCallback, this, "show_up", this.HandleShowUpFOCUSOUT, null);
        g_IDEAttrImageDialog.ShowDialog(null, func);
    }

    public fun HandleShowOverFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_over", this._show_over.text, this._show_over_grid9.selected, false);
    }
    public fun HandleShowOverSelect(ALittle.UIEvent event)
    {
        var func = bind(this.ImagePathSelectCallback, this, "show_over", this.HandleShowOverFOCUSOUT, null);
        g_IDEAttrImageDialog.ShowDialog(null, func);
    }

    public fun HandleShowDownFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_down", this._show_down.text, this._show_down_grid9.selected, false);
    }
    public fun HandleShowDownSelect(ALittle.UIEvent event)
    {
        var func = bind(this.ImagePathSelectCallback, this, "show_down", this.HandleShowDownFOCUSOUT, null);
        g_IDEAttrImageDialog.ShowDialog(null, func);
    }

    public fun HandleShowDisabledFOCUSOUT(ALittle.UIEvent event)
    {
        if (event.target._user_data != null)
        {
            if (event.target._user_data == event.target.text) return;
            event.target._user_data = event.target.text;
        }
        this.RemoverToNilShowSetForImage("show_disabled", this._show_disabled.text, this._show_disabled_grid9.selected, false);
    }
    public fun HandleShowDisabledSelect(ALittle.UIEvent event)
    {
        var func = bind(this.ImagePathSelectCallback, this, "show_disabled", this.HandleShowDisabledFOCUSOUT, null);
        g_IDEAttrImageDialog.ShowDialog(null, func);
    }

    public fun HandleShowTextFOCUSOUT(ALittle.UIEvent event)
    {
        g_IDEAttrTextDialog.ShowDialog(this, "show_text", false);
    }

    public fun HandleShowOverTextFOCUSOUT(ALittle.UIEvent event)
    {
        g_IDEAttrTextDialog.ShowDialog(this, "show_over_text", false);
    }

    public fun HandleShowDownTextFOCUSOUT(ALittle.UIEvent event)
    {
        g_IDEAttrTextDialog.ShowDialog(this, "show_down_text", false);
    }

    public fun HandleShowDisabledTextFOCUSOUT(ALittle.UIEvent event)
    {
        g_IDEAttrTextDialog.ShowDialog(this, "show_disabled_text", false);
    }
}