
namespace ALittleIDE;

public class IDEUIProjectList : ALittle.DisplayLayout
{
	private ALittle.ScrollScreen _project_scroll_screen;	// 项目滚动屏
	private ALittle.DisplayObject _project_search_key;		// 搜索输入框

	////////////////////////////////////////////////////////////////////////////////////-
	// 处理项目搜索，右键菜单
	private fun HandleProjectItemRightClick(ALittle.UIRButtonDownEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("打开", bind(this.HandleRightProjectOpen, this, event.target));
		menu.AddItem("关闭", bind(this.HandleRightProjectClose, this, event.target));
		menu.AddItem("刷新", bind(this.HandleRightProjectRefresh, this, event.target));
		menu.AddItem("移除", bind(this.HandleRightProjectRemove, this, event.target));
	}
	
	private async fun HandleRightProjectOpen(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		var error = g_IDEProject.OpenProject(project_name);
		if (error != null) g_AUITool.ShowNotice("错误", error);
	}
	
	public fun HandleRightProjectRemove(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (g_IDEProject.project != null && g_IDEProject.project.name == project_name)
		{
			g_AUITool.ShowNotice("提示", "当前项目正在编辑，请先关闭");
			return;
		}
		this._project_scroll_screen.RemoveChild(target);
		// 移除项目
		g_IDEProject.RemoveProject(project_name);
	}
	
	public async fun HandleRightProjectClose(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (g_IDEProject.project == null || g_IDEProject.project.name != project_name)
			return;
        
		// 如果都保存了，就直接关闭项目
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		g_IDEProject.CloseProject();
	}

	public async fun RefreshProject()
	{
		// 检查是否都保存了
		if (!g_IDECenter.center.content_edit.IsSaveAll())
		{
			var result = g_AUITool.SaveNotice("提示", "是否保存当前项目?");
			if (result == AUIPlugin.AUIToolOption.YES)
				g_IDECenter.center.content_edit.SaveAllTab();
		}
		// 刷新当前
		g_IDECenter.RefreshProject();
	}

	public fun HandleRightProjectRefresh(ALittle.DisplayObject target)
	{
		var project_name = target.text;
	
		// 检查当前是否有项目并且是否保存
		if (g_IDEProject.project == null || g_IDEProject.project.name != project_name)
			return;

		this.RefreshProject();
	}
}