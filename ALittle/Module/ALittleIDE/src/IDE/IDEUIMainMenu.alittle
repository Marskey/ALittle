
namespace ALittleIDE;

protected class IDEUIMainMenu : ALittle.Linear
{
	// 版本管理器
	private AUIPlugin.AUIVersionManager _version_manager;

	public fun TCtor()
	{
		// 版本服务器
		var version_ip = g_IDEServerConfig.GetConfig("version_ip", "139.159.176.119");
		var version_port = g_IDEServerConfig.GetConfig("version_port", 1011);
		this._version_manager = new AUIPlugin.AUIVersionManager(version_ip, version_port, "alittle", "ALittleIDE");
		
		// 如果不是debug模式，那么就检查版本
		[Language(Lua)]
		if (!g_Control.crypt_mode) this._version_manager.CheckVersionUpdate();
	}

	public fun Shutdown()
	{
		[Language(Lua)]
		this._version_manager.Shutdown();
    }

	//////////////////////////////////////////////////////////////////////////////////////////-
	// 处理文件菜单
	private fun HandleFileMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("新建", bind(g_IDEProjectManager.ShowNewProject, g_IDEProjectManager));
		menu.AddItem("打开", bind(g_IDEProjectManager.ShowOpenProject, g_IDEProjectManager));
		menu.AddItem("设置", bind(g_IDEProjectManager.ShowSettingProject, g_IDEProjectManager, null));
		menu.AddItem("保存", bind(g_IDETabManager.SaveAllTab, g_IDETabManager));
		menu.AddItem("刷新", bind(g_IDEProjectManager.RefreshProject, g_IDEProjectManager));
		menu.AddItem("导出项目", bind(g_IDEProjectManager.ShowExportProject, g_IDEProjectManager));
		menu.Show(event.target);
	}
	// 处理编辑菜单
	private fun HandleEditMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("新建控件", bind(g_IDEControlManager.ShowNewControl, g_IDEControlManager));
		menu.AddItem("重做", bind(g_IDEUICenter.HandleDoRevoke, g_IDEUICenter, null));
		menu.AddItem("撤销", bind(g_IDEUICenter.HandleUndoRevoke, g_IDEUICenter, null));
		menu.Show(event.target);
	}
	// 处理工具菜单
	private fun HandleToolMenuClick(ALittle.UIClickEvent event)
	{
		var menu = new AUIPlugin.AUIRightMenu();
		menu.AddItem("生成ui_all_in_one", bind(this.HandleGenUIAllInOneClick, this));
		menu.AddItem("生成core_all_in_one", bind(this.HandleGenCoreAllInOneClick, this));
		menu.AddItem("生成std_all_in_one", bind(this.HandleGenStdAllInOneClick, this));
		menu.AddItem("生成cengine_all_in_one", bind(this.HandleGenCEngineAllInOneClick, this));
		menu.Show(event.target);
	}
	// 处理版本菜单
	private fun HandleVersionMenuClick(ALittle.UIClickEvent event) { [Language(Lua)]this._version_manager.ShowDialog(); }
	// 处理运行
	private fun HandleRunMenuClick(ALittle.UIClickEvent event) { g_IDEProjectManager.RunProject(); }

	// 生成Json模板代码
	private fun HandleGenUIAllInOneClick()
	{
		if (g_IDEProject.project == null)
		{
			g_AUITool.ShowNotice("提示", "没有加载项目");
			return;
        }
		
		var all_in_one = new Map<string, any>();
		var map = ALittle.File_GetFileAttrByDir("Module/"..g_IDEProject.project.name.."/UI");
		for (var path, _ in map)
		{
			var json:Map<string, any> = ALittle.File_ReadJsonFromStdFile(path);
			for (var name, o in json)
				all_in_one[name] = o;
		}
		var result = ALittle.File_WriteJsonFromStdFile(all_in_one, "Module/"..g_IDEProject.project.name.."/ui_all_in_one.json");
		if (result)
			g_AUITool.ShowNotice("提示", "生成成功");
		else
			g_AUITool.ShowNotice("提示", "生成失败");
    }

	// 生成核心库Core
	private fun HandleGenCoreAllInOneClick()
	{
		var all_in_one = new List<string>();

		var base_path = "Module/ALittleIDE/Other/GameLibrary/Core/JSScript/";
		var file_list = new List<string>();
		ALittle.List_Push(file_list, base_path.."ALittle.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Core/JavaScript/"));
		ALittle.List_Push(file_list, base_path.."Core/Reflect/ReflectRegister.js");
		ALittle.List_Push(file_list, base_path.."Core/Reflect/ReflectDefine.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Core/Utility/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Core/Net/"));
		for (var index, path in file_list)
		{
			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
			if (all_in_one[index] == null)
			{
				g_AUITool.ShowNotice("提示", "生成失败");
				return;
            }
		}
		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Core/Core.js");
		if (result)
			g_AUITool.ShowNotice("提示", "生成成功");
		else
			g_AUITool.ShowNotice("提示", "生成失败");
    }
	// 生成标准库Std
	private fun HandleGenStdAllInOneClick()
	{
		var all_in_one = new List<string>();

		var base_path = "Module/ALittleIDE/Other/GameLibrary/Std/JSScript/";
		var file_list = new List<string>();
		ALittle.List_Push(file_list, base_path.."ALittle.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Std/Reflect/"));
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopObject.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/ILoopSystem.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopFrame.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopFunction.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopGroup.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopList.js");
		ALittle.List_Push(file_list, base_path.."Std/Loop/LoopTimer.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Std/Utility/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Std/Net/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Adapter/JavaScript/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."Std/Singleton/"));
		for (var index, path in file_list)
		{
			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
			if (all_in_one[index] == null)
			{
				g_AUITool.ShowNotice("提示", "生成失败");
				return;
            }
		}
		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/Std/Std.js");
		if (result)
			g_AUITool.ShowNotice("提示", "生成成功");
		else
			g_AUITool.ShowNotice("提示", "生成失败");
    }
	// 生成客户端引起CEngine
	private fun HandleGenCEngineAllInOneClick()
	{
		var all_in_one = new List<string>();

		var base_path = "Module/ALittleIDE/Other/GameLibrary/CEngine/JSScript/";
		var file_list = new List<string>();
		ALittle.List_Push(file_list, base_path.."ALittle.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/IShow.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JSystem.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JShow.js");
		ALittle.List_Push(file_list, base_path.."Adapter/PIXI/JCsvLoader.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/String.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/File.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/System.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/ConfigSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/OtherSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/AudioSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/ModuleSystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/Utility/CsvConfigManager.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/LoopSystem/"));
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UIEnumTypes.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UIEventDispatcher.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Matrix2D.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayObject.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayGroup.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayLayout.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/DisplayView.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Quad.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Image.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Sprite.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Text.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextArea.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/TextInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Base/Triangle.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid9Image.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextCheckButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TextRadioButton.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid3.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Grid9.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Linear.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Tab.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/DropDown.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Slider.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollBar.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollScreen.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Dialog.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/TileTable.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImagePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/SpritePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/FramePlay.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/Piechart.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImageInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ImageEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichArea.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichEdit.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/RichInput.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollList.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/Complex/ScrollButton.js");
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Special/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Plugin/"));
		ALittle.List_PushList(file_list, ALittle.File_GetFileListByDir(base_path.."CEngine/UISystem/Effect/"));
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/UISystem.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/LayerManager.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/TextureManager.js");
		ALittle.List_Push(file_list, base_path.."CEngine/UISystem/ControlSystem.js");
		for (var index, path in file_list)
		{
			all_in_one[index] = ALittle.File_ReadTextFromStdFile(path);
			if (all_in_one[index] == null)
			{
				g_AUITool.ShowNotice("提示", "生成失败");
				return;
            }
		}
		var result = ALittle.File_WriteTextFromStdFile(ALittle.String_Join(all_in_one, "\n"), "Module/ALittleIDE/Other/GameLibrary/CEngine/CEngine.js");
		if (result)
			g_AUITool.ShowNotice("提示", "生成成功");
		else
			g_AUITool.ShowNotice("提示", "生成失败");
    }
}