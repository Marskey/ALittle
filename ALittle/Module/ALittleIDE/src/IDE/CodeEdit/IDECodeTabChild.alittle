
namespace ALittleIDE;

public class IDECodeTabChild : IDETabChild
{
    private IDECodeTreeUserInfo _user_info;

	private AUIPlugin.AUICodeEdit _edit;        // 标签页

    private AUIPlugin.AUICodeLanguage _language;

	public ctor(ALittle.ControlSystem ctrl_sys, string name, bool save, IDECodeTreeUserInfo user_info)
	{
        this._user_info = user_info;
		// 创建编辑容器
		this._edit = g_AUIPluinControl.CreateControl{AUIPlugin.AUICodeEdit}("ide_code_tab_screen", this);
        this._edit.AddEventListener(this, this.HandleChangedEvent);
		this._edit._user_data = this;
    }

    private fun OnUndo() { this._edit.OnUnDo(); }
    private fun OnRedo() { }
    private fun OnHide() { this._edit.OnHide(); }
    private fun OnShow() { this._edit.OnShow(); }
    private fun OnClose() { this._edit.OnClose(); }

    private fun OnOpen()
    {
        this._revoke_list = new ALittle.RevokeList();

        [Language(Lua)]
        if (this._language == null && ALittle.File_GetFileExtByPathAndUpper(this._user_info.path) == "ALITTLE")
            this._language = new AUIPlugin.AUICodeALittleScript(this._user_info.project, this._user_info.path);
        this._edit.Load(this._user_info.path, this._revoke_list, this._language);
    }

    private fun OnRightMenu(AUIPlugin.AUIRightMenu menu)
    {
        this._edit.OnRightMenu(menu);
    }

    private fun HandleChangedEvent(ALittle.UIChangedEvent event)
    {
        this.save = false;
    }

    public get tab_screen() : ALittle.ScrollScreen { return this._edit; }
	public get tab_body() : ALittle.DisplayObject { return this._edit; }

    public set save(bool value)
    {
        if (this._save == value) return;
		if (value == false)
        {
            this._save = false;
            this.UpdateTitle();
            return;
		}
        this._edit.Save();
        this._save = value;
        this.UpdateTitle();
	}

    public get id() : string { return this._user_info.path; }

	public fun Rename(string name)
    {
        this._name = name;
        this.UpdateTitle();
	}

	public fun UpdateTitle()
    {
        var text = this._name;
        if (this._save == false) text = text.." *";
        g_IDECenter.center.content_edit.main_tab.SetChildText(this._edit, text);
	}

	public get title() : string
    {
        return this._name;
	}

    public fun CreateBySelect(IDECodeTreeUserInfo info)
    {
        this._user_info = info;
        this._edit.EditFocus();
    }
}
