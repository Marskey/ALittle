namespace alittle;

[Language(Lua)]
private static __Log(string content, int level) { __CPPAPI_ScriptSystemEx.Log(content, level); }
[Language(Lua)]
ALittle.SetLogFunc(__Log);

public await static RequreCEngine(string base_path)
{
    ALittle.Require(base_path, "CEngine/UISystem/IShow");
    
    [Language(JavaScript)]
    ALittle.Require(base_path, "../JSNative/pixi.min");
    [Language(JavaScript)]
    ALittle.Require(base_path, "../JSNative/pixi-textinput");
    [Language(JavaScript)]
    ALittle.Require(base_path, "Adapter/PIXI/JSystem");
    [Language(JavaScript)]
    ALittle.Require(base_path, "Adapter/PIXI/JShow");
    [Language(JavaScript)]
    ALittle.Require(base_path, "Adapter/PIXI/JCsvLoader");
    
    ALittle.Require(base_path, "CEngine/Utility/String");
    ALittle.Require(base_path, "CEngine/Utility/File");
    ALittle.Require(base_path, "CEngine/Utility/System");
    ALittle.Require(base_path, "CEngine/Utility/ConfigSystem");
    ALittle.Require(base_path, "CEngine/Utility/OtherSystem");
    ALittle.Require(base_path, "CEngine/Utility/AudioSystem");
    ALittle.Require(base_path, "CEngine/Utility/CsvConfigManager");
    ALittle.Require(base_path, "CEngine/Utility/Application");
    
    ALittle.Require(base_path, "CEngine/LoopSystem/LoopAnimation");
    ALittle.Require(base_path, "CEngine/LoopSystem/LoopAttribute");
    ALittle.Require(base_path, "CEngine/LoopSystem/LoopLinear");
    ALittle.Require(base_path, "CEngine/LoopSystem/LoopRit");
    
    ALittle.Require(base_path, "CEngine/UISystem/UIEnumTypes");
    ALittle.Require(base_path, "CEngine/UISystem/UIEventDispatcher");
    
    ALittle.Require(base_path, "CEngine/UISystem/Base/Matrix2D");
    ALittle.Require(base_path, "CEngine/UISystem/Base/DisplayObject");
    ALittle.Require(base_path, "CEngine/UISystem/Base/DisplayGroup");
    ALittle.Require(base_path, "CEngine/UISystem/Base/DisplayLayout");
    ALittle.Require(base_path, "CEngine/UISystem/Base/DisplayView");
    ALittle.Require(base_path, "CEngine/UISystem/Base/Quad");
    ALittle.Require(base_path, "CEngine/UISystem/Base/Image");
    ALittle.Require(base_path, "CEngine/UISystem/Base/Sprite");
    ALittle.Require(base_path, "CEngine/UISystem/Base/Text");
    ALittle.Require(base_path, "CEngine/UISystem/Base/TextArea");
    ALittle.Require(base_path, "CEngine/UISystem/Base/TextEdit");
    ALittle.Require(base_path, "CEngine/UISystem/Base/TextInput");
    ALittle.Require(base_path, "CEngine/UISystem/Base/Triangle");

    ALittle.Require(base_path, "CEngine/UISystem/Complex/Grid9Image");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/TextButton");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/TextCheckButton");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/TextRadioButton");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Grid3");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Grid9");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Linear");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Tab");

    ALittle.Require(base_path, "CEngine/UISystem/Complex/DropDown");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Slider");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ScrollBar");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ScrollScreen");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Dialog");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/TileTable");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ImagePlay");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/SpritePlay");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/FramePlay");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/Piechart");

    ALittle.Require(base_path, "CEngine/UISystem/Complex/ImageInput");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ImageEdit");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/RichArea");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/RichEdit");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/RichInput");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ScrollList");
    ALittle.Require(base_path, "CEngine/UISystem/Complex/ScrollButton");

    ALittle.Require(base_path, "CEngine/UISystem/Special/SpringTextButton");

    ALittle.Require(base_path, "CEngine/UISystem/Plugin/SpringButton");
    ALittle.Require(base_path, "CEngine/UISystem/Plugin/SpringCheckButton");
    ALittle.Require(base_path, "CEngine/UISystem/Plugin/SpringRadioButton");
    ALittle.Require(base_path, "CEngine/UISystem/Plugin/SpringDialog");

    ALittle.Require(base_path, "CEngine/UISystem/Effect/EffectImage");
    
    ALittle.Require(base_path, "CEngine/UISystem/UISystem");
    ALittle.Require(base_path, "CEngine/UISystem/LayerManager");
    ALittle.Require(base_path, "CEngine/UISystem/TextureManager");
    ALittle.Require(base_path, "CEngine/UISystem/ControlSystem");

    [Language(Lua)]
    ALittle.Require(base_path, "CEngine/Version/VersionSystem");
    [Language(Lua)]
    ALittle.Require(base_path, "CEngine/Version/VersionSystemAndroid");
    [Language(Lua)]
    ALittle.Require(base_path, "CEngine/Version/VersionSystemIOS");
    [Language(Lua)]
    ALittle.Require(base_path, "CEngine/Version/VersionSystemWindows");
}


public static __ALITTLEAPI_HandleConsoleCmd(string cmd)
{
    ALittle.ExecuteCommand(cmd);
}

public static __ALITTLEAPI_FingerMoved(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerMoved(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_FingerDown(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerDown(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_FingerUp(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerUp(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_MouseMoved(double x, double y)
{
    A_UISystem.HandleMouseMoved(x, y);
}

public static __ALITTLEAPI_LButtonDown(double x, double y, int count)
{
    A_UISystem.HandleLButtonDown(x, y, count);
}

public static __ALITTLEAPI_LButtonUp(double x, double y)
{
    A_UISystem.HandleLButtonUp(x, y);
}

public static __ALITTLEAPI_MButtonDown(double x, double y, int count)
{
    A_UISystem.HandleMButtonDown(x, y, count);
}

public static __ALITTLEAPI_MButtonUp(double x, double y)
{
    A_UISystem.HandleMButtonUp(x, y);
}

public static __ALITTLEAPI_RButtonDown(double x, double y, int count)
{
    A_UISystem.HandleRButtonDown(x, y, count);
}

public static __ALITTLEAPI_RButtonUp(double x, double y)
{
    A_UISystem.HandleRButtonUp(x, y);
}

public static __ALITTLEAPI_MouseWheel(double x, double y)
{
    A_UISystem.HandleMouseWheel(x, y);
}

public static __ALITTLEAPI_KeyDown(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyDown(mod, sym, scancode);
}

public static __ALITTLEAPI_KeyUp(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyUp(mod, sym, scancode);
}

public static __ALITTLEAPI_ViewResized(int width, int height)
{
    A_UISystem.HandleViewResized(width, height);
}

public static __ALITTLEAPI_TextInput(string text)
{
    A_UISystem.HandleTextInput(text);
}

public static __ALITTLEAPI_TextEditing(string text, int start)
{
    A_UISystem.HandleTextEditing(text, start);
}

public static __ALITTLEAPI_DropFile(string path)
{
    A_UISystem.HandleDropFile(path);
}

public static __ALITTLEAPI_WindowEnter()
{
    A_UISystem.HandleWindowEnter();
}

public static __ALITTLEAPI_WindowLeave()
{
    A_UISystem.HandleWindowLeave();
}
    
//////////////////////////////////////////////////////////////////-
public static __ALITTLEAPI_Update(int frame_time)
{
    A_LoopSystem.Update(frame_time);
    A_WeakLoopSystem.Update(frame_time);
}
//////////////////////////////////////////////////////////////////-
    
public static __ALITTLEAPI_WillEnterBackground()
{
    A_OtherSystem.HandleWillEnterBackground();
}

public static __ALITTLEAPI_DidEnterBackground()
{
    A_OtherSystem.HandleDidEnterBackground();
}

public static __ALITTLEAPI_WillEnterForeground()
{
    A_OtherSystem.HandleWillEnterForeground();
}

public static __ALITTLEAPI_DidEnterForeground()
{
    A_OtherSystem.HandleDidEnterForeground();
}

public static __ALITTLEAPI_LowMemory()
{
    A_OtherSystem.HandleLowMemory();
}

//////////////////////////////////////////////////////////////////-
// 这个函数用于C++调用
public static __ALITTLEAPI_TextureLoadSucceed(ALittle.ITextureLoader loader, ALittle.ITexture texture)
{
    A_LoadTextureManager.HandleTextureLoadSucceed(loader, texture);
}
public static __ALITTLEAPI_TextureLoadFailed(ALittle.ITextureLoader loader)
{
    A_LoadTextureManager.HandleTextureLoadFailed(loader);
}
public static __ALITTLEAPI_TextureCutLoadSucceed(ALittle.ITextureCutLoader loader, ALittle.ITexture texture)
{
    A_LoadTextureManager.HandleTextureCutLoadSucceed(loader, texture);
}
public static __ALITTLEAPI_TextureCutLoadFailed(ALittle.ITextureCutLoader loader)
{
    A_LoadTextureManager.HandleTextureCutLoadFailed(loader);
}
public static __ALITTLEAPI_CsvFileLoadSucceed(ALittle.ICsvFileLoader loader, ALittle.ICsvFile file)
{
    A_CsvConfigManager.HandleCsvFileLoadSucceed(loader, file);
}
public static __ALITTLEAPI_CsvFileLoadFailed(ALittle.ICsvFileLoader loader)
{
    A_CsvConfigManager.HandleCsvFileLoadFailed(loader);
}
public static __ALITTLEAPI_RenderDeviceReset()
{
    A_LoadTextureManager.HandleRenderDeviceReset();
}

//////////////////////////////////////////////////////////////////////////////////////
public var __ALITTLEAPI_HttpFileSucceed = ALittle.__ALITTLEAPI_HttpFileSucceed;
public var __ALITTLEAPI_HttpFileFailed = ALittle.__ALITTLEAPI_HttpFileFailed;
public var __ALITTLEAPI_HttpFileProcess = ALittle.__ALITTLEAPI_HttpFileProcess;

public var __ALITTLEAPI_HttpClientSucceed = ALittle.__ALITTLEAPI_HttpClientSucceed;
public var __ALITTLEAPI_HttpClientFailed = ALittle.__ALITTLEAPI_HttpClientFailed;

public var __ALITTLEAPI_ConnectSucceed = ALittle.__ALITTLEAPI_ConnectSucceed;
public var __ALITTLEAPI_Disconnect = ALittle.__ALITTLEAPI_Disconnect;
public var __ALITTLEAPI_ConnectFailed = ALittle.__ALITTLEAPI_ConnectFailed;
public var __ALITTLEAPI_Message = ALittle.__ALITTLEAPI_Message;

//////////////////////////////////////////////////////////////////////////////////////
public static __ALITTLEAPI_AudioChunkStopedEvent(int id)
{
    A_AudioSystem.HandleAudioChunkStopedEvent(id);
}
//////////////////////////////////////////////////////////////////////////////////////
public static __ALITTLEAPI_NetworkChanged(int net_type)
{
    ALittle.System_ClearAIFamily();
    A_OtherSystem.HandleNetworkChanged(net_type);
}

public static __ALITTLEAPI_ALittleJsonRPC(string json)
{
    A_OtherSystem.HandleALittleJsonRPC(json);
}

public static __ALITTLEAPI_SystemSelectFile(string path)
{
    A_OtherSystem.HandleSystemSelectFile(path);
}

public static __ALITTLEAPI_SystemSaveFile(string path)
{
    A_OtherSystem.HandleSystemSaveFile(path);
}