namespace alittle;

public async static __ALITTLEAPI_CEngine_Init(string base_path)
{
    Require(base_path.."CEngine/UISystem/IShow");
    
    [Language(JavaScript)]
    {
        Require(base_path.."Adapter/JavaScript/JHttpInterface");
        Require(base_path.."Adapter/JavaScript/JHttpFileInterface");
        Require(base_path.."Adapter/JavaScript/JMessageFactory");
        Require(base_path.."Adapter/JavaScript/JMsgInterface");
        Require(base_path.."Adapter/JavaScript/JSystem");
        Require(base_path.."Adapter/JavaScript/JShow");
    }
    
    Require(base_path.."CEngine/Utility/String");
    Require(base_path.."CEngine/Utility/File");
    Require(base_path.."CEngine/Utility/ModuleSystem");
    Require(base_path.."CEngine/Utility/System");
    Require(base_path.."CEngine/Utility/ConfigSystem");
    Require(base_path.."CEngine/Utility/AudioSystem");
    Require(base_path.."CEngine/Utility/OtherSystem");
    Require(base_path.."CEngine/Utility/CsvConfigManager");
    
    Require(base_path.."CEngine/LoopSystem/LoopAnimation");
    Require(base_path.."CEngine/LoopSystem/LoopAttribute");
    Require(base_path.."CEngine/LoopSystem/LoopLinear");
    Require(base_path.."CEngine/LoopSystem/LoopRit");
    
    Require(base_path.."CEngine/UISystem/UIEnumTypes");
    Require(base_path.."CEngine/UISystem/UIEventDispatcher");
    
    Require(base_path.."CEngine/UISystem/Base/Matrix2D");
    Require(base_path.."CEngine/UISystem/Base/DisplayObject");
    Require(base_path.."CEngine/UISystem/Base/DisplayGroup");
    Require(base_path.."CEngine/UISystem/Base/DisplayLayout");
    Require(base_path.."CEngine/UISystem/Base/Quad");
    Require(base_path.."CEngine/UISystem/Base/Image");
    Require(base_path.."CEngine/UISystem/Base/Text");
    
    Require(base_path.."CEngine/UISystem/Complex/Grid9Image");
    
    Require(base_path.."CEngine/UISystem/UISystem");
    Require(base_path.."CEngine/UISystem/LayerManager");
    Require(base_path.."CEngine/UISystem/TextureManager");
    Require(base_path.."CEngine/UISystem/ControlSystem");
    /*
    ALittle.System_CreateView("test", 800, 600, 0, 0);
    
    var control = new ALittle.ControlSystem("G2048");
    
    var quad = new ALittle.Quad(null);
    quad.x = 10;
    quad.y = 10;
    quad.width = 100;
    quad.height = 100;
    quad.red = 1;
    A_LayerManager.AddToTip(quad);
    
    var image = new ALittle.Image(control);
    image.x = 210;
    image.y = 210;
    image.width = 100;
    image.height = 100;
    image.texture_name = "2048.png";
    A_LayerManager.AddToTip(image);
    
    var text = new ALittle.Text(control);
    text.x = 0;
    text.y = 210;
    text.width = 100;
    text.height = 100;
    text.red = 1;
    text.green = 0.8;
    text.font_size = 20;
    text.font_path = "Arial";
    text.text = "这个是一个文本3";
    A_LayerManager.AddToTip(text);
    */
}

public static __ALITTLEAPI_HandleConsoleCmd(string cmd)
{
    ALittle.ExecuteCommand(cmd);
}

public static __ALITTLEAPI_FingerMoved(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerMoved(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_FingerDown(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerDown(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_FingerUp(double x, double y, int finger_id, int touch_id)
{
    A_UISystem.HandleFingerUp(x, y, finger_id, touch_id);
}

public static __ALITTLEAPI_MouseMoved(double x, double y)
{
     A_UISystem.HandleMouseMoved(x, y);
}

public static __ALITTLEAPI_LButtonDown(double x, double y, int count)
{
    A_UISystem.HandleLButtonDown(x, y, count);
}

public static __ALITTLEAPI_LButtonUp(double x, double y)
{
    A_UISystem.HandleLButtonUp(x, y);
}

public static __ALITTLEAPI_MButtonDown(double x, double y, int count)
{
    A_UISystem.HandleMButtonDown(x, y, count);
}

public static __ALITTLEAPI_MButtonUp(double x, double y)
{
    A_UISystem.HandleMButtonUp(x, y);
}

public static __ALITTLEAPI_RButtonDown(double x, double y, int count)
{
    A_UISystem.HandleRButtonDown(x, y, count);
}

public static __ALITTLEAPI_RButtonUp(double x, double y)
{
    A_UISystem.HandleRButtonUp(x, y);
}

public static __ALITTLEAPI_MouseWheel(double x, double y)
{
    A_UISystem.HandleMouseWheel(x, y);
}

public static __ALITTLEAPI_KeyDown(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyDown(mod, sym, scancode);
}

public static __ALITTLEAPI_KeyUp(int mod, int sym, int scancode)
{
    A_UISystem.HandleKeyUp(mod, sym, scancode);
}

public static __ALITTLEAPI_ViewResized(int width, int height)
{
    A_UISystem.HandleViewResized(width, height);
}

public static __ALITTLEAPI_TextInput(string text)
{
    A_UISystem.HandleTextInput(text);
}

public static __ALITTLEAPI_TextEditing(string text, int start)
{
    A_UISystem.HandleTextEditing(text, start);
}

public static __ALITTLEAPI_DropFile(string path)
{
    A_UISystem.HandleDropFile(path);
}

public static __ALITTLEAPI_WindowEnter()
{
    A_UISystem.HandleWindowEnter();
}

public static __ALITTLEAPI_WindowLeave()
{
    A_UISystem.HandleWindowLeave();
}
    
//////////////////////////////////////////////////////////////////-
public static __ALITTLEAPI_Update(int frame_time)
{
    [Language(Lua)]
    A_LuaLoopSystem.Update(frame_time);
    [Language(JavaScript)]
    A_JSLoopSystem.Update(frame_time);
}
//////////////////////////////////////////////////////////////////-
    
public static __ALITTLEAPI_WillEnterBackground()
{
    A_OtherSystem.HandleWillEnterBackground();
}

public static __ALITTLEAPI_DidEnterBackground()
{
    A_OtherSystem.HandleDidEnterBackground();
}

public static __ALITTLEAPI_WillEnterForeground()
{
    A_OtherSystem.HandleWillEnterForeground();
}

public static __ALITTLEAPI_DidEnterForeground()
{
    A_OtherSystem.HandleDidEnterForeground();
}

public static __ALITTLEAPI_LowMemory()
{
    A_OtherSystem.HandleLowMemory();
}

//////////////////////////////////////////////////////////////////-
// 这个函数用于C++调用
public static __ALITTLEAPI_TextureLoadSucceed(ALittle.ITextureLoader loader, ALittle.ITexture texture)
{
    A_LoadTextureManager.HandleTextureLoadSucceed(loader, texture);
}
public static __ALITTLEAPI_TextureLoadFailed(ALittle.ITextureLoader loader)
{
    A_LoadTextureManager.HandleTextureLoadFailed(loader);
}
public static __ALITTLEAPI_TextureCutLoadSucceed(ALittle.ITextureCutLoader loader, ALittle.ITexture texture)
{
    A_LoadTextureManager.HandleTextureCutLoadSucceed(loader, texture);
}
public static __ALITTLEAPI_TextureCutLoadFailed(ALittle.ITextureCutLoader loader)
{
    A_LoadTextureManager.HandleTextureCutLoadFailed(loader);
}
public static __ALITTLEAPI_CsvFileLoadSucceed(ALittle.ICsvFileLoader loader, ALittle.ICsvFile file)
{
    A_CsvConfigManager.HandleCsvFileLoadSucceed(loader, file);
}
public static __ALITTLEAPI_CsvFileLoadFailed(ALittle.ICsvFileLoader loader)
{
    A_CsvConfigManager.HandleCsvFileLoadFailed(loader);
}
public static __ALITTLEAPI_RenderDeviceReset()
{
    A_LoadTextureManager.HandleRenderDeviceReset();
}

//////////////////////////////////////////////////////////////////////////////////////
public static __ALITTLEAPI_AudioChunkStopedEvent(int id)
{
    A_AudioSystem.HandleAudioChunkStopedEvent(id);
}
//////////////////////////////////////////////////////////////////////////////////////
public static __ALITTLEAPI_NetworkChanged(int net_type)
{
    ALittle.System_ClearAIFamily();
    A_OtherSystem.HandleNetworkChanged(net_type);
}

public static __ALITTLEAPI_ALittleJsonRPC(string json)
{
    A_OtherSystem.HandleALittleJsonRPC(json);
}

public static __ALITTLEAPI_SystemSelectFile(string path)
{
    A_OtherSystem.HandleSystemSelectFile(path);
}

public static __ALITTLEAPI_SystemSaveFile(string path)
{
    A_OtherSystem.HandleSystemSaveFile(path);
}

//////////////////////////////////////////////////////////////////////////////////////-
// 启动核心模块资源
public async static __ALITTLEAPI_SetupMainModule(string base_path, string debug, string module_name, string sengine_path, string modules) : bool
{
    A_AudioSystem.Setup();
    return A_ModuleSystem.MainSetup(base_path, debug, module_name, sengine_path, modules);
}
// 释放核心模块资源
public static __ALITTLEAPI_ShutdownMainModule()
{
    A_LayerManager.Shutdown();
    A_AudioSystem.Shutdown();
    A_ModuleSystem.MainShutdown();
}