
[Language(JavaScript)]
namespace JavaScript;

private var __JHTTP_MAXID:int = 0;

public class JHttpInterface : ALittle.IHttpSenderNative
{
    private int _id;
    private string _url;
    private string _content;
    private javascript.XMLHttpRequest _request;
    private Functor<(ALittle.IHttpSenderNative, string)> _failed_callback;
    private Functor<(ALittle.IHttpSenderNative)> _succeed_callback;
    
    public ctor()
    {
        ++ __JHTTP_MAXID;
        this._id = __JHTTP_MAXID;
    }
    public fun GetID() : int { return this._id; }
    public fun SetURL(string url, string content)
    {
        this._url = url;
        this._content = content;
    }
    public fun Start(Functor<(ALittle.IHttpSenderNative, string)> failed_callback
                    , Functor<(ALittle.IHttpSenderNative)> succeed_callback)
    {
        this._failed_callback = failed_callback;
        this._succeed_callback = succeed_callback;
        this._request = new javascript.XMLHttpRequest();
        if (this._content == null)
            this._request.open("GET", this._url, true);
        else
            this._request.open("POST", this._url, true);
        
		var error_func = bind(this.HandleAjaxError, this);
        this._request.onerror = error_func;
		this._request.ontimeout = error_func;
        this._request.onload = bind(this.HandleStartCompleted, this);
        this._request.send(this._content);
    }
    public fun Stop()
    {
        if (this._request != null)
            this._request.abort();
    }
    public fun GetResponse() : string { return this._request.responseText; }                // 获取请求结果
    
    private fun HandleAjaxError()
	{
        if (this._failed_callback != null)
            this._failed_callback(this, this._request.statusText);
	}
    
	private fun HandleStartCompleted()
	{
        if (this._succeed_callback != null)
            this._succeed_callback(this);
	}
}