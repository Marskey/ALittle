
namespace ALittle;

public static String_JsonEncode(any object) : string
{
    [Language(Lua)]
    return lua.json.encode(object);
    
    [Language(JavaScript)]
    return javascript.JSON.stringify(object);
}

public static String_JsonDecode(string text) : any
{
    [Language(Lua)]
    return lua.json.decode(text);
    
    [Language(JavaScript)]
    return javascript.JSON.parse(text);
}

public static String_MD5(string text) : string
{
    [Language(Lua)]
    return lua.md5.stringmd5(text);
    
    [Language(JavaScript)]
    return javascript.md5(text);
}

public static String_Base64Encode(string text) : string
{
    [Language(Lua)]
    return lua.base64.encode(text);
    
    [Language(JavaScript)]
    return javascript.btoa(text);
}

public static String_Base64Decode(string text) : string
{
    [Language(Lua)]
    return lua.base64.decode(text);
    
    [Language(JavaScript)]
    return javascript.atob(text);
}

public static String_GetWordCount(string text) : int
{
    [Language(Lua)]
    return lua.utf8.wordcount(text);
    
    [Language(JavaScript)]
    return cast<javascript.String>(text).length;
}

public static String_GetByteCount(string text, int word_count) : int
{
    [Language(Lua)]
    return lua.utf8.bytecount(text, word_count);
    
    [Language(JavaScript)]
    if (cast<javascript.String>(text).length < word_count)
        return cast<javascript.String>(text).length;
    else
        return word_count;
}