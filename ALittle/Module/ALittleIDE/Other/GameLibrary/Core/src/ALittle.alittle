namespace alittle;

[Language(JavaScript)]
private static JSRequire(string base_path, string url, ALittle.Thread thread)
{
    if (javascript.typeof(javascript.require) != "undefined")
    {
        javascript.require("../"..base_path..url);
        cast<Functor<(string)>>(thread)(null);
        return;
    }

    var script = cast<javascript.ScriptElement>(document.createElement("script"));
    script.type = "text/javascript";
    script.async = "async";
        
    var error = bind(cast<Functor<(string)>>(thread), "load failed:"..url);
    script.onabort = error;
    script.onerror = error;
    script.ontimeout = error;
    script.onload = bind(cast<Functor<(string)>>(thread), null);
        
    script.src = base_path..url..".js";
    document.body.appendChild(script);
}

public await static Require(string base_path, string url) : string
{
    [Language(JavaScript)]
    JSRequire(base_path, url, co);
    [Language(JavaScript)]
    return yield;
    
    [Language(Lua)]
    if (_G["core_require"] != null)
        cast<Functor<(string):bool>>(_G["core_require"])(base_path..url);
    else
        lua.require(base_path..url);
    [Language(Lua)]
    return null;
}

public await static RequireCore(string base_path)
{
    [Language(JavaScript)]
    Require(base_path, "Core/JavaScript/JavaScriptClass");
    [Language(JavaScript)]
    Require(base_path, "Core/JavaScript/JavaScriptException");
    
    Require(base_path, "Core/Reflect/ReflectRegister");
    Require(base_path, "Core/Reflect/ReflectDefine");
    
    [Language(Lua)]
    Require(base_path, "Core/Lua/LuaBind");
    [Language(Lua)]
    Require(base_path, "Core/Lua/LuaClass");
    [Language(Lua)]
    Require(base_path, "Core/Lua/LuaException");

    // 这个是为了兼容lua5.2或以上版本
    [Language(Lua)]
    if (_G["bit"] == null) _G["bit"] = _G["bit32"];

    Require(base_path, "Core/Utility/Log");
    Require(base_path, "Core/Utility/List");
    Require(base_path, "Core/Utility/Map");
    Require(base_path, "Core/Utility/Math");
    Require(base_path, "Core/Utility/String");
    Require(base_path, "Core/Utility/Time");
    Require(base_path, "Core/Utility/Coroutine");
    
    Require(base_path, "Core/Net/HttpFileReceiver");
    Require(base_path, "Core/Net/HttpFileSender");
    Require(base_path, "Core/Net/HttpReceiver");
    Require(base_path, "Core/Net/HttpSender");
    Require(base_path, "Core/Net/MsgCommon");
}
