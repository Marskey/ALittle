
namespace ABrowser;

protected class OPSCOMPDropDownSelect : OPSCOMPBase
{
	private OPSCenter _center;
	private OPSDialogFieldConfig _field_config;
	private Map<string, any> _data;
	private Map<string, any> _data_map;

	private ALittle.DisplayObject _text_ctrl;
	private ALittle.DropDown _dropdown_ctrl;

    public ctor(ALittle.ControlSystem ctrl_sys, OPSCenter center, OPSDialogFieldConfig field_config, Map<string, any> data)
    {
    	this._center = center;
    	this._field_config = field_config;
    	this._data = data;
    
    	this._data_map = new Map<string, any>();	// dropdown映射表
    	
    	// 创建文本控件
    	this._text_ctrl = g_Control.CreateControl{ALittle.DisplayObject}("ops_common_text");
    	this._text_ctrl.y_type = ALittle.UIEnumTypes.POS_ALIGN_CENTER;
    	// 创建dropdown控件
    	this._dropdown_ctrl = g_Control.CreateControl{ALittle.DropDown}("ops_common_dropdown");
    	this._dropdown_ctrl.y_type = ALittle.UIEnumTypes.POS_ALIGN_CENTER;
    
    	this.UpdateConfig();
    }
    
    ////////////////////////////////////////////////////////////////////////////////-
    // 获取数据
    public fun GetData() : string, any
    {
        ALittle.Log(this._field_config.invoke_param, this._data_map[this._dropdown_ctrl.text]);
    	return this._field_config.invoke_param, this._data_map[this._dropdown_ctrl.text];
    }
    //////////////////////////////////////////////////////////////////////////////////////////////-
    // 处理配置
    // 更新配置文件
    public fun UpdateConfig()
    {
    	// 根据配置文件刷新容器
    	this.RefreshConfig();
    	// 设置数据
    	this.RefreshDataInfo();
    }
    
    public fun RefreshConfig()
    {
    	var config = this._field_config;
    
    	this._text_ctrl.text = config.name;
    	// 设置drowdown的数据
    	this._dropdown_ctrl.x = this._text_ctrl.width;
    	if (config.width == null)
    		this._dropdown_ctrl.width = 150;
    	else
    		this._dropdown_ctrl.width = config.width;
    
    	if (config.data_list != null)
    		this._dropdown_ctrl.data_list = config.data_list;

        this._data_map = config.data_map;

    	// 设置容器位置和大小并添加到容器
    	if (config.x == null) this.x = 0;
    	else this.x = config.x;
    	if (config.y == null) this.y = 0;
    	else this.y = config.y;
    	this.width = this._dropdown_ctrl.x + this._dropdown_ctrl.width;
    	this.height = this._dropdown_ctrl.height;
    	this.AddChild(this._text_ctrl);
    	this.AddChild(this._dropdown_ctrl);
    }
    
    public fun RefreshDataInfo()
    {
    	if (this._data == null) return;
    	if (this._field_config.input_param == null) return;
    
    	var text = this._data[this._field_config.input_param];
    	for (var k, v in this._data_map)
    	{
    		if (text == v)
    		{
    			this._dropdown_ctrl.text = k;
    			break;
    		}
    	}
    }
}