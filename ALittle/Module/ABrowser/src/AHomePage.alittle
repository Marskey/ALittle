
namespace ABrowser;

struct AHomePageQuickInfo
{
	ALittle.Image _quick_image;
	ALittle.DisplayObject _quick_button;
	ALittle.DisplayObject _quick_title;
}

struct AHomePageScreenSaveInfoDetail
{
	string module_name;
	string title;
	AModuleInfo download_info;
	string file_path;
}

struct AHomePageScreenSaveInfo
{
	List<AHomePageScreenSaveInfoDetail> list;
}

struct AHomePageQuickUserData
{
	AHomePageQuickInfo control_line;
	AHomePageScreenSaveInfoDetail module_info;
}

class AHomePage
{
	private ALittle.DisplayObject _home_scene;		// 主页
	private ALittle.ScrollScreen _home_screen;		// 主页的滚动屏

	public ctor()
	{
    }
    
    public fun Setup()
    {
    	// 创建home界面
    	this._home_scene = g_Control.CreateControl{ALittle.DisplayObject}("abrowser_home_scene", this);
    	g_ABrowser.browser_tab.AddChild(this._home_scene);
    	g_ABrowser.browser_tab.SetChildText(this._home_scene, "首页");
    	g_ABrowser.browser_tab.DisableCloseButton(this._home_scene);
    	g_ABrowser.browser_tab.tab = this._home_scene;

		var screen_save = g_ConfigSystemUser.GetConfig("screen_save", new AHomePageScreenSaveInfo());
    	if (screen_save.list == null) screen_save.list = new List<AHomePageScreenSaveInfoDetail>();
    	// 初始化首页
    	for (var k, v in screen_save.list)
    	{
    		var control_line = new AHomePageQuickInfo();
    		var quick = g_Control.CreateControl{ALittle.DisplayObject}("abrowser_home_quick", control_line);
    		control_line._quick_title.text = v.title;
    		this._home_screen.AddChild(quick);
    		control_line._quick_image.SetTextureCut(v.file_path, lua.math.floor(control_line._quick_image.width), lua.math.floor(control_line._quick_image.height), false);
    		control_line._quick_button.AddEventListener(this, this.HandleQuickClick);
    		var user_data = new AHomePageQuickUserData();
    		user_data.control_line = control_line;
    		user_data.module_info = v;
    		control_line._quick_button._user_data = user_data;
    		quick._user_data = user_data;
    	}
    }
    
    public fun ShowHomeScene()
    {
    	g_ABrowser.browser_tab.tab = this._home_scene;
    }
    
    public async fun HandleQuickClick(ALittle.UIClickEvent event)
    {
		var user_data:AHomePageQuickUserData = event.target._user_data;
    	if (user_data.module_info.download_info == null) user_data.module_info.download_info = new AModuleInfo();
    	g_ABrowser.LoadModule(user_data.module_info.module_name, user_data.module_info.download_info.ip, user_data.module_info.download_info.port, user_data.module_info.download_info.account_name);
    }
    
    public fun RefreshQuick(string module_name, AHomePageScreenSaveInfoDetail module_info)
    {
    	var child_list = new List<ALittle.DisplayObject>();
    	var child_list_count = 0;
		var target_child:ALittle.DisplayObject = null;
    	for (var k, v in this._home_screen.childs)
    	{
			var user_data:AHomePageQuickUserData = v._user_data;
    		if (user_data.module_info.module_name == module_name)
    			target_child = v;
    		else
    		{
    			++ child_list_count;
    			child_list[child_list_count] = v;
    		}
    	}
    	this._home_screen.RemoveAllChild();
    	if (target_child != null)
    	{
			var user_data:AHomePageQuickUserData = target_child._user_data;
    		user_data.module_info = module_info;
    		var control_line = user_data.control_line;
    		control_line._quick_title.text = module_info.title;
    		control_line._quick_image.SetTextureCut(module_info.file_path, lua.math.floor(control_line._quick_image.width), lua.math.floor(control_line._quick_image.height), false);
    		this._home_screen.AddChild(target_child);
    	}
    	else
    	{
    		var control_line = new AHomePageQuickInfo();
    		var quick = g_Control.CreateControl{ALittle.DisplayObject}("abrowser_home_quick", control_line);
    		control_line._quick_title.text = module_info.title;
    		this._home_screen.AddChild(quick);
    		control_line._quick_image.SetTextureCut(module_info.file_path, lua.math.floor(control_line._quick_image.width), lua.math.floor(control_line._quick_image.height), false);
    		control_line._quick_button.AddEventListener(this, this.HandleQuickClick);
    		var user_data = new AHomePageQuickUserData();
    		user_data.control_line = control_line;
    		user_data.module_info = module_info;
    		control_line._quick_button._user_data = user_data;
    		quick._user_data = user_data;
    		this._home_screen.AddChild(quick);
    	}
    	for (var k, v in child_list)
    		this._home_screen.AddChild(v);
    }

    public fun SaveModuleScreen(ALittle.DisplayObject child)
    {
    	var loop = new ALittle.LoopFunction(bind(this.SaveModuleScreenImpl, this, child), 1, 1, 2000);
		loop.Start();
    }

    // 截图
    public fun SaveModuleScreenImpl(ALittle.DisplayObject child)
    {
		var user_data:ABrowserTabChildUserData = child._user_data;

    	ALittle.File_MakeDir(g_ModuleBasePathEx.."/ModuleScreenSave");
		var file_path = g_ModuleBasePathEx.."/ModuleScreenSave/"..ALittle.String_MD5(user_data.module_name)..".png";

    	var result = g_Control.SaveControlToFile(child, file_path, 720 / ALittle.System_GetScreenWidth());
    	if (result)
    	{
			var screen_save = g_ConfigSystemUser.GetConfig("screen_save", new AHomePageScreenSaveInfo());
    		if (screen_save.list == null) screen_save.list = new List<AHomePageScreenSaveInfoDetail>();
    		// 从list里面移除
    		for (var k, v in screen_save.list)
    		{
    			if (v.module_name == user_data.module_name)
    			{
    				lua.table.remove(screen_save.list, k);
    				break;
    			}
    		}
    		// 信息
    		var info = new AHomePageScreenSaveInfoDetail();
    		info.module_name = user_data.module_name;
    		info.title = user_data.module_name;
    		if (user_data.module_info != null && user_data.module_info.title != null)
    			info.title = user_data.module_info.title;
    		info.download_info = g_AModuleDownload.GetDownloadInfo(user_data.module_name);
    		if (info.download_info == null) info.download_info = new AModuleInfo();
    		info.file_path = file_path;
    		lua.table.insert(screen_save.list, 1, info);
    		g_ConfigSystemUser.SetConfig("screen_save", screen_save);

    		this.RefreshQuick(user_data.module_name, info);
    	}
    }
}
            
protected var g_AHomePage = new AHomePage();