
namespace GBRMaker;

public class IDETool
{
	// 提示框
	private ALittle.Dialog _notice_dialog;
	private ALittle.TextArea _notice_content;
	private double _notice_min_size;
	
	// 重命名输入框
	private ALittle.ImageInput _rename_input;

	////////////////////////////////////////////////////////////////////////////////////////
	// 显示模态提示
	public fun ShowNotice(string title, string content)
	{
		// 创建模态提示对话框，并添加到模态层
		if (this._notice_dialog == null)
		{
			this._notice_dialog = g_Control.CreateControl{ALittle.Dialog}("ide_notice_dialog", this);
			A_LayerManager.AddToModal(this._notice_dialog);
			this._notice_min_size = this._notice_content.height;
		}
		// 显示提示对话框，设置标题和内容
		this._notice_dialog.visible = true;
		this._notice_dialog.MoveToTop();
		this._notice_dialog.title = title;
		this._notice_content.text = content;
	
		var real_height = this._notice_content.real_height;
		if (real_height < this._notice_min_size) real_height = this._notice_min_size;
	
		var dialog_body_height = real_height + this._notice_content.y + this._notice_content.height_value;
		this._notice_dialog.height = dialog_body_height + this._notice_dialog.head_size;
	}
	// 隐藏提示框
	public fun HandleNoticeConfirmClick(ALittle.UIEvent event)
	{
		this._notice_dialog.visible = false;
	}
	////////////////////////////////////////////////////////////////////////////////////////
	// 显示重命名输入框
	public fun ShowRename(Functor<(string)> callback, string text, double x, double y, double width)
	{
		// 创建输入框，并加入模态层
		if (this._rename_input == null)
		{
			this._rename_input = g_Control.CreateControl{ALittle.ImageInput}("ide_rename_image_input", this);
			A_LayerManager.AddToModal(this._rename_input);
		}
		// 显示输入框
		this._rename_input.visible = true;
		// 并且获得焦点
		A_UISystem.focus = this._rename_input.show_input;
		// 设置位置
		this._rename_input.x = x;
		this._rename_input.y = y;
		this._rename_input.width = width;
		this._rename_input.text = text;
		// 如果不为空串，那么才选择全选
		if (text != "") this._rename_input.SelectAll();
	
		// 保存目标
		this._rename_input._user_data = callback;
	}
	// 重新名确认
	public fun HandleRenameConfirm(ALittle.UIEvent event)
	{
		// 获取目标
		var callback:Functor<(string)> = this._rename_input._user_data;
		this._rename_input._user_data = null;
	
		if (callback == null) return;
	
		// 隐藏输入框
		this._rename_input.visible = false;
		// 获取输入框文本
		var text = this._rename_input.text;
	
		// 调用重命名函数
		callback(text);
	}
	// 重命名取消
	public fun HandleRenameCancel(ALittle.UIKeyDownEvent event)
	{
		if (event.sym != 27) return;

		// 获取目标
		var callback:Functor<(string)> = this._rename_input._user_data;
		this._rename_input._user_data = null;
		
		// 隐藏输入框
		this._rename_input.visible = false;
    }
}
////////////////////////////////////////////////////////////////////////////////////////

protected var g_IDETool = new IDETool();