namespace alittle;

public await static RequireCore(string base_path)
{
    [Language(JavaScript)]
    ALittle.Require(base_path, "Core/JavaScript/JavaScriptClass");
    [Language(JavaScript)]
    ALittle.Require(base_path, "Core/JavaScript/JavaScriptException");
    
    ALittle.Require(base_path, "Core/Reflect/ReflectRegister");
    ALittle.Require(base_path, "Core/Reflect/ReflectDefine");
    
    [Language(Lua)]
    ALittle.Require(base_path, "Core/Lua/LuaBind");
    [Language(Lua)]
    ALittle.Require(base_path, "Core/Lua/LuaClass");
    [Language(Lua)]
    ALittle.Require(base_path, "Core/Lua/LuaException");

    // 这个是为了兼容lua5.2或以上版本
    [Language(Lua)]
    if (_G["bit"] == null) _G["bit"] = _G["bit32"];

    ALittle.Require(base_path, "Core/Utility/Log");
    ALittle.Require(base_path, "Core/Utility/List");
    ALittle.Require(base_path, "Core/Utility/Map");
    ALittle.Require(base_path, "Core/Utility/Math");
    ALittle.Require(base_path, "Core/Utility/String");
    ALittle.Require(base_path, "Core/Utility/Time");
    ALittle.Require(base_path, "Core/Utility/Coroutine");
    
    ALittle.Require(base_path, "Core/Net/HttpFileReceiver");
    ALittle.Require(base_path, "Core/Net/HttpFileSender");
    ALittle.Require(base_path, "Core/Net/HttpReceiver");
    ALittle.Require(base_path, "Core/Net/HttpSender");
    ALittle.Require(base_path, "Core/Net/MsgCommon");
}
