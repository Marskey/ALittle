
register namespace lua;

public struct ABnfQueryColor
{
    int line_start;
    int char_start;
    int line_end;
    int char_end;
    int tag;
    bool blur;
}

public struct ABnfQueryInfo
{
    int line_start;
    int char_start;
    int line_end;
    int char_end;
    string info;
}

public struct ABnfQueryGoto
{
    int line_start;
    int char_start;
    int line_end;
    int char_end;
    string file_path;
}

public struct ABnfQueryCompleteInfo
{
    string display;
    string insert;
    string descriptor;
    int tag;
}

public struct ABnfQueryComplete
{
    int line_start;
    int char_start;
    int line_end;
    int char_end;
    List<ABnfQueryCompleteInfo> complete_list;
}

public struct ABnfFactory
{
    
}

public struct ABnf
{
    
}

public struct ABnfFile
{
    
}

public struct ABnfProject
{
    
}

public class alanguage
{
    // abnf文法
    public static create_abnf() : ABnf {}
    public static abnf_load(ABnf abnf, string buffer, ABnfFactory factory) : string {}

    // 文件操作
    public static abnffile_settext(ABnfFile abnf_file, string text) {}
    public static abnffile_inserttext(ABnfFile abnf_file, string text, int it_line, int it_char) {}
    public static abnffile_deletetext(ABnfFile abnf_file, int it_line_start, int it_char_start, int it_line_end, int it_char_end) {}
    public static abnffile_querycolor(ABnfFile abnf_file, int version, int line) : List<ABnfQueryColor> {}
    public static abnffile_queryinfo(ABnfFile abnf_file, int version, int line, int char) : ABnfQueryInfo {}
    public static abnffile_querygoto(ABnfFile abnf_file, int version, int line, int char) : ABnfQueryGoto {}
    public static abnffile_querycomplete(ABnfFile abnf_file, int version, int line, int char) : ABnfQueryComplete {}
}