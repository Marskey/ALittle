
namespace AUIPlugin;

private var g_ALittleScriptColor:Map<int, ABnfColor>;

enum ALittleScriptColorType
{
    COMMENT = 1;
    DEFINE_NAME = 2;
    VAR_NAME = 3;
    CUSTOM_NAME = 4;
    CTRL_KEYWORD = 5;
    KEYWORD = 6;
    METHOD_NAME = 7;
    DEFAULT = 8;
    TEXT = 9;
}

public class AUICodeALittleScript : AUICodeLanguage
{
    public ctor(AUICodeProject project, string full_path)
    {
        if (g_ALittleScriptColor == null)
        {
            g_ALittleScriptColor = new Map<int, ABnfColor>();
            var color:ABnfColor;
            {
                color = new ABnfColor();
                color.red = 128/255;
                color.green = 128/255;
                color.blue = 128/255;
                g_ALittleScriptColor[ALittleScriptColorType.COMMENT] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 78/255;
                color.green = 201/255;
                color.blue = 176/255;
                g_ALittleScriptColor[ALittleScriptColorType.DEFINE_NAME] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 169/255;
                color.green = 183/255;
                color.blue = 198/255;
                g_ALittleScriptColor[ALittleScriptColorType.VAR_NAME] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 78/255;
                color.green = 201/255;
                color.blue = 176/255;
                g_ALittleScriptColor[ALittleScriptColorType.CUSTOM_NAME] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 255/255;
                color.green = 128/255;
                color.blue = 0/255;
                g_ALittleScriptColor[ALittleScriptColorType.CTRL_KEYWORD] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 255/255;
                color.green = 128/255;
                color.blue = 0/255;
                g_ALittleScriptColor[ALittleScriptColorType.KEYWORD] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 255/255;
                color.green = 198/255;
                color.blue = 109/255;
                g_ALittleScriptColor[ALittleScriptColorType.METHOD_NAME] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 169/255;
                color.green = 183/255;
                color.blue = 198/255;
                g_ALittleScriptColor[ALittleScriptColorType.DEFAULT] = color;   
            }
            {
                color = new ABnfColor();
                color.red = 106/255;
                color.green = 135/255;
                color.blue = 89/255;
                g_ALittleScriptColor[ALittleScriptColorType.TEXT] = color;   
            }
        }

        this._abnf_file = lua.alittlescript.create_alittlescript_file(project.project, full_path, "");
    }

    // 颜色查询
    public fun QueryColorValue(int tag) : ABnfColor { return g_ALittleScriptColor[tag]; }

    // 设置目标生成语言
    public fun SetTargetLanguage(string target_languaeg)
    {
        lua.alittlescript.alittlescriptproject_settargetlanguage(this._project.project, target_languaeg);
    }
}