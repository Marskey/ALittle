
namespace BattleCity;

public class BattleBullet : ALittle.DisplayLayout
{
    private ALittle.Sprite _bullet;
    private ALittle.FramePlay _effect_explosion;

    private BattleRole _role;
    private int _dir;

    private fun TCtor()
    {
        this._effect_explosion.visible = false;
    }

    public fun Init(int dir, BattleRole role)
    {
        this._dir = dir;
        this._role = role;

        if (this._dir == DirType.DT_UP)
        	this._bullet.col_index = 1;
        elseif (this._dir == DirType.DT_RIGHT)
            this._bullet.col_index = 2;
        elseif (this._dir == DirType.DT_DOWN)
        	this._bullet.col_index = 3;
        else
        	this._bullet.col_index = 4;
    }

    public fun UpdateFrame(int frame_time)
    {
        var explosion = false;

        if (this._bullet.visible)
        {
            if (this._dir == DirType.DT_UP)
            {
                this.y -= 0.2 * frame_time;

                var row = ALittle.Math_Floor(this.y / g_GCenter.battle_scene.cell_size);
                var col_min = ALittle.Math_Floor(this.x / g_GCenter.battle_scene.cell_size);
                var col_max = ALittle.Math_Floor((this.x + this.width - 1) / g_GCenter.battle_scene.cell_size);

                if (g_GCenter.battle_scene.BulletCollision(row, col_min, true, this._dir)) explosion = true;
                elseif (g_GCenter.battle_scene.BulletCollision(row, col_max, false, this._dir)) explosion = true;
                elseif (this.y <= 0) explosion = true;
            }
            elseif (this._dir == DirType.DT_RIGHT)
            {
                this.x += 0.2 * frame_time;

                var row_min = ALittle.Math_Floor(this.y / g_GCenter.battle_scene.cell_size);
                var row_max = ALittle.Math_Floor((this.y + this.height - 1) / g_GCenter.battle_scene.cell_size);
                var col = ALittle.Math_Floor((this.x + this.width) / g_GCenter.battle_scene.cell_size);

                if (g_GCenter.battle_scene.BulletCollision(row_min, col, true, this._dir)) explosion = true;
                elseif (g_GCenter.battle_scene.BulletCollision(row_max, col, false, this._dir)) explosion = true;
                elseif (this.x + this.width >= g_GCenter.battle_scene.map_size) explosion = true;
            }
            elseif (this._dir == DirType.DT_DOWN)
            {
                this.y += 0.2 * frame_time;

                var row = ALittle.Math_Floor((this.y + this.height) / g_GCenter.battle_scene.cell_size);
                var col_min = ALittle.Math_Floor(this.x / g_GCenter.battle_scene.cell_size);
                var col_max = ALittle.Math_Floor((this.x + this.width - 1) / g_GCenter.battle_scene.cell_size);

                if (g_GCenter.battle_scene.BulletCollision(row, col_min, true, this._dir)) explosion = true;
                elseif (g_GCenter.battle_scene.BulletCollision(row, col_max, false, this._dir)) explosion = true;
                elseif (this.y + this.height >= g_GCenter.battle_scene.map_size) explosion = true;
            }
            else
            {
                this.x -= 0.2 * frame_time;

                var row_min = ALittle.Math_Floor(this.y / g_GCenter.battle_scene.cell_size);
                var row_max = ALittle.Math_Floor((this.y + this.height - 1) / g_GCenter.battle_scene.cell_size);
                var col = ALittle.Math_Floor(this.x / g_GCenter.battle_scene.cell_size);

                if (g_GCenter.battle_scene.BulletCollision(row_min, col, true, this._dir)) explosion = true;
                elseif (g_GCenter.battle_scene.BulletCollision(row_max, col, false, this._dir)) explosion = true;
                elseif (this.x <= 0) explosion = true;
            }
        }
        else
        {
            if (!this._effect_explosion.IsPlaying())
            {
                this._role.AddBullet();
                var loop = new ALittle.LoopTimer(bind(g_GCenter.battle_scene.BulletDeath, g_GCenter.battle_scene, this), 0);
                loop.Start();
            }
        }

        if (explosion)
        {
            this._bullet.visible = false;
            this._effect_explosion.visible = true;
            this._effect_explosion.Play();
        }
    }
}
