
namespace ADeeplearning;

public class MnistTestLayout : ALittle.DisplayLayout
{
	private ALittle.Text _result_text;
	private AUIPlugin.AUIDrawingBoard _board;
    // private deeplearning.DeeplearningMnistMLPModel _model;
    private deeplearning.DeeplearningMnistCNNModel _model;

    private string _model_path;

    public fun TCtor()
    {
        // this._model_path = g_ModuleBasePath.."Other/mnist-mlp.model";
        this._model_path = g_ModuleBasePath.."Other/mnist-cnn.model";

        // this._model = new deeplearning.DeeplearningMnistMLPModel();
        this._model = new deeplearning.DeeplearningMnistCNNModel();

        var load_path:string;
        if (ALittle.File_GetFileAttr(this._model_path) != null) load_path = this._model_path;
        this._model.Init(load_path, null, null);
        this._board.SetPan(5, 0xFFFFFFFF);
        this._board.SetDrawSize(ALittle.Math_Floor(this._board.width), ALittle.Math_Floor(this._board.height), 0xFF000000);
        this._result_text.text = "识别结果";
    }

    public fun Reset()
    {
        var load_path:string;
        if (ALittle.File_GetFileAttr(this._model_path) != null) load_path = this._model_path;
        this._model.Init(this._model_path, null, null);
    }

    private fun HandleChanged(ALittle.UIChangedEvent event)
    {
        if (deeplearning.GetNumberOfGraph() > 0)
        {
            g_AUITool.ShowNotice("提示", "当前有图正在计算，请稍后再试");
            return;
        }

        var address = carp.GetCarpSurfaceAddress(this._board.surface);
        var result = this._model.Output(address);
        this._result_text.text = "识别结果:"..result;
    }

    private fun HandleClearClick(ALittle.UIClickEvent event)
    {
        this._result_text.text = "识别结果";
        this._board.ClearContent(0xFF000000);
    }
}
